@model IEnumerable<W2022A2PGBNGUYEN.Models.TrackBaseViewModel>

@{
    ViewBag.Title = ViewContext.RouteData.GetRequiredString("action");
    string actionName = ViewContext.RouteData.GetRequiredString("action");
    switch (actionName)
    {
        case "Index":
            ViewBag.Title = "All Tracks";
            break;
        case "RockAndMetal":
            ViewBag.Title = "Rock & Metal Tracks";
            break;
        case "TylerAndVallance":
            ViewBag.Title = "Tyler & Vallance Tracks";
            break;
        case "LongestTracks":
            ViewBag.Title = "Longest Tracks";
            break;
        case "SmallestTracks":
            ViewBag.Title = "Smallest Tracks";
            break;
    }

}

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("All Tracks", "Index") |
    @Html.ActionLink("Rock & Metal Tracks", "RockAndMetal") |
    @Html.ActionLink("Tyler & Vallance Tracks", "TylerAndVallance") |
    @Html.ActionLink("Longest Tracks", "LongestTracks") |
    @Html.ActionLink("Smallest Tracks", "SmallestTracks") 
    

</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AlbumId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MediaTypeId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GenreId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Composer)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Milliseconds)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Bytes)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UnitPrice)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AlbumId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MediaTypeId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.GenreId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Composer)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Milliseconds)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Bytes)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UnitPrice)
        </td>
      
    </tr>
}

</table>
